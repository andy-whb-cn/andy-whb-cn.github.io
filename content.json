{"meta":{"title":"Andy's Note","subtitle":"","description":"","author":"Andy","url":"https://andy-whb-cn.github.io","root":"/"},"pages":[{"title":"404 Not Found：该页无法显示","date":"2024-08-22T09:40:49.988Z","updated":"2024-08-22T09:40:49.988Z","comments":false,"path":"/404.html","permalink":"https://andy-whb-cn.github.io/404.html","excerpt":"","text":""},{"title":"书单","date":"2024-08-22T09:40:49.988Z","updated":"2024-08-22T09:40:49.988Z","comments":false,"path":"books/index.html","permalink":"https://andy-whb-cn.github.io/books/index.html","excerpt":"","text":""},{"title":"关于","date":"2024-08-22T09:40:49.988Z","updated":"2024-08-22T09:40:49.988Z","comments":false,"path":"about/index.html","permalink":"https://andy-whb-cn.github.io/about/index.html","excerpt":"","text":"个人详细介绍"},{"title":"分类","date":"2024-08-22T09:40:49.988Z","updated":"2024-08-22T09:40:49.988Z","comments":false,"path":"categories/index.html","permalink":"https://andy-whb-cn.github.io/categories/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2024-08-22T09:40:49.988Z","updated":"2024-08-22T09:40:49.988Z","comments":true,"path":"links/index.html","permalink":"https://andy-whb-cn.github.io/links/index.html","excerpt":"","text":""},{"title":"Repositories","date":"2024-08-22T09:40:49.988Z","updated":"2024-08-22T09:40:49.988Z","comments":false,"path":"repository/index.html","permalink":"https://andy-whb-cn.github.io/repository/index.html","excerpt":"","text":""},{"title":"标签","date":"2024-08-22T09:40:49.989Z","updated":"2024-08-22T09:40:49.989Z","comments":false,"path":"tags/index.html","permalink":"https://andy-whb-cn.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"前端版本更新检测","slug":"前端版本更新检测","date":"2024-08-26T09:41:36.083Z","updated":"2024-08-26T10:06:39.440Z","comments":true,"path":"2024/08/26/前端版本更新检测/","permalink":"https://andy-whb-cn.github.io/2024/08/26/%E5%89%8D%E7%AB%AF%E7%89%88%E6%9C%AC%E6%9B%B4%E6%96%B0%E6%A3%80%E6%B5%8B/","excerpt":"","text":"前端版本更新检测方案采用Etag比较https://blog.csdn.net/qq_38951259/article/details/136739490 采用前后端Version比较1、后台提供轻量级version api；2、前端页面初始化或定时，比较本地version和服务端version是否有变更，设置local vesion变更变量；3、前端在进入router前，判断有local vesion变更变量，刷新本地缓存并删除local vesion变更变量； 引申：为避免频繁去请求后台的version，可以考虑按时间戳（每日）去检查远端version更新。","categories":[],"tags":[{"name":"Vue","slug":"Vue","permalink":"https://andy-whb-cn.github.io/tags/Vue/"},{"name":"前端","slug":"前端","permalink":"https://andy-whb-cn.github.io/tags/%E5%89%8D%E7%AB%AF/"}]},{"title":"Flink 处理复杂的Json格式","slug":"Flink-Nested-Json","date":"2024-08-22T08:33:34.000Z","updated":"2024-08-26T08:58:48.787Z","comments":true,"path":"2024/08/22/Flink-Nested-Json/","permalink":"https://andy-whb-cn.github.io/2024/08/22/Flink-Nested-Json/","excerpt":"","text":"Flink 复杂Json格式处理Flink 官方文档：https://nightlies.apache.org/flink/flink-docs-release-1.20/zh/docs/connectors/table/formats/json/ Flink 对于单层Json的处理，可以支持直接转换，但对于复杂的嵌套Json则需要在类型定义上做一些处理。 以下是结合ROW、ARRAY、MAP的简单示例介绍（原文： https://blog.csdn.net/m0_67400972/article/details/123923656 ） 123456789101112131415161718192021222324252627282930&#123; &quot;id&quot;:1238123899121, &quot;name&quot;:&quot;asdlkjasjkdla998y1122&quot;, &quot;date&quot;:&quot;1990-10-14&quot;, &quot;obj&quot;:&#123; &quot;time1&quot;:&quot;12:12:43Z&quot;, &quot;str&quot;:&quot;sfasfafs&quot;, &quot;lg&quot;:2324342345 &#125;, &quot;arr&quot;:[ &#123; &quot;f1&quot;:&quot;f1str11&quot;, &quot;f2&quot;:134 &#125;, &#123; &quot;f1&quot;:&quot;f1str22&quot;, &quot;f2&quot;:555 &#125; ], &quot;time&quot;:&quot;12:12:43Z&quot;, &quot;timestamp&quot;:&quot;1990-10-14T12:12:43Z&quot;, &quot;map&quot;:&#123; &quot;flink&quot;:123 &#125;, &quot;mapinmap&quot;:&#123; &quot;inner_map&quot;:&#123; &quot;key&quot;:234 &#125; &#125;&#125; 123456789101112131415161718192021CREATE TABLE json_source ( id BIGINT, name STRING, `date` DATE, obj ROW&lt;time1 TIME,str STRING,lg BIGINT&gt;, arr ARRAY&lt;ROW&lt;f1 STRING,f2 INT&gt;&gt;, `time` TIME, `timestamp` TIMESTAMP(3), `map` MAP&lt;STRING,BIGINT&gt;, mapinmap MAP&lt;STRING,MAP&lt;STRING,INT&gt;&gt;, proctime as PROCTIME() ) WITH ( &#x27;connector.type&#x27; = &#x27;kafka&#x27;, &#x27;connector.topic&#x27; = &#x27;test&#x27;, &#x27;connector.properties.zookeeper.connect&#x27; = &#x27;localhost:2181&#x27;, &#x27;connector.properties.bootstrap.servers&#x27; = &#x27;localhost:9092&#x27;, &#x27;connector.properties.group.id&#x27; = &#x27;testGroup&#x27;, &#x27;connector.version&#x27;=&#x27;universal&#x27;, &#x27;format.type&#x27; = &#x27;json&#x27;, &#x27;connector.startup-mode&#x27;=&#x27;latest-offset&#x27; ); 12345-- 构造insert into json_source select 111 as id,&#x27;name&#x27; as name,Row(CURRENT_TIME,&#x27;ss&#x27;,123) as obj,Array[Row(&#x27;f&#x27;,1),Row(&#x27;s&#x27;,2)] as arr,Map[&#x27;k1&#x27;,&#x27;v1&#x27;,&#x27;k2&#x27;,&#x27;v2&#x27;] as `map`,Map[&#x27;inner_map&#x27;,Map[&#x27;k&#x27;,&#x27;v&#x27;]] as mapinmap;-- 获取，注意数组index从1开始select id, name,`date`,obj.str,arr[1].f1,`map`[&#x27;flink&#x27;],mapinmap[&#x27;inner_map&#x27;][&#x27;key&#x27;] from json_source;","categories":[],"tags":[{"name":"Flink","slug":"Flink","permalink":"https://andy-whb-cn.github.io/tags/Flink/"}]},{"title":"IFrame自适应高度","slug":"IFrame-Auto-Resize","date":"2024-04-30T06:43:29.847Z","updated":"2024-08-26T10:06:46.831Z","comments":true,"path":"2024/04/30/IFrame-Auto-Resize/","permalink":"https://andy-whb-cn.github.io/2024/04/30/IFrame-Auto-Resize/","excerpt":"","text":"IFrame子页面自适应高度问题项目中经常会遇到需要通过IFrame集成子页面的情况，比较常见的问题如跨域、自适应页面高度等。 方案一 廖老师这里介绍得很全面，直接引用原文 https://liaoxuefeng.com/blogs/all/2024-02-25-auto-resize-iframe/ 方案二 使用第三方库(Vue), https://github.com/davidjbradshaw/iframe-resizer 安装库1$ npm install iframe-resizer@latest -S IFrame子窗口页面123456789101112131415// directives/iframeResize.jsimport iframeResize from &#x27;iframe-resizer/js/iframeResizer&#x27; export default &#123; beforeMount: (el, &#123; value = &#123;&#125; &#125;) =&gt; &#123; el.addEventListener(&#x27;load&#x27;, () =&gt; iframeResize(value, el)) &#125;, unmounted: (el) =&gt; &#123; el.iFrameResizer.removeListeners() &#125;&#125; // index.jsimport iframeResize from &#x27;./iframeResize&#x27;app.directive(&#x27;resize&#x27;, iframeResize) IFrame父窗口页面12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273&lt;template&gt; &lt;div class=&quot;iframe-wrapper&quot;&gt; &lt;iframe v-resize=&quot;iFrameResizer&quot; id=&quot;Iframe&quot; width=&quot;100%&quot; :src=&quot;url&quot; frameborder=&quot;0&quot; &gt;&lt;/iframe&gt; &lt;/div&gt;&lt;/template&gt; &lt;script&gt;import &#123; mapGetters &#125; from &#x27;vuex&#x27;import &#123; jumpOtherSSO &#125; from &#x27;@/utils/sso/sso&#x27;import &#123; openFunc &#125; from &#x27;@/utils/util&#x27;export default &#123; name: &#x27;AppCenter&#x27;, data () &#123; return &#123; iFrameResizer: &#123; log: false, heightCalculationMethod: &#x27;lowestElement&#x27;, warningTimeout: 0 &#125;, ssoUrl: &#x27;&#x27; &#125; &#125;, mounted () &#123; // this.updateIframeHeightFunc() if (this.isUserLogin) &#123; jumpOtherSSO(&#x27;appCenter&#x27;, &#123; page: 1 &#125;).then(res =&gt; &#123; this.ssoUrl = res.data &#125;).catch(() =&gt; &#123; this.ssoUrl = this.$route.query.url &#125;) &#125; window.addEventListener(&#x27;message&#x27;, (e) =&gt; &#123; if (e.data.appId) &#123; const routeData = this.$router.resolve(&#123; name: this.$routerNameMap.appCenterDetails, query: &#123; url: xxx`, id: e.data.appId &#125; &#125;) openFunc(routeData.href) &#125; &#125;) &#125;, computed: &#123; ...mapGetters([&#x27;isUserLogin&#x27;]), url () &#123; return !this.isUserLogin ? this.$route.query.url : this.ssoUrl &#125; &#125;, methods: &#123; updateIframeHeightFunc () &#123; const oIframe = document.getElementById(&#x27;Iframe&#x27;) const deviceHeight = document.documentElement.clientHeight + 2360 oIframe.style.height = `$&#123;deviceHeight&#125;px` &#125; &#125;&#125;&lt;/script&gt; &lt;style lang=&quot;scss&quot; scoped&gt;.iframe-wrapper &#123; width: 100%; height: 100%; border: 0;&#125;&lt;/style&gt;","categories":[],"tags":[{"name":"Vue","slug":"Vue","permalink":"https://andy-whb-cn.github.io/tags/Vue/"},{"name":"前端","slug":"前端","permalink":"https://andy-whb-cn.github.io/tags/%E5%89%8D%E7%AB%AF/"}]}],"categories":[],"tags":[{"name":"Vue","slug":"Vue","permalink":"https://andy-whb-cn.github.io/tags/Vue/"},{"name":"前端","slug":"前端","permalink":"https://andy-whb-cn.github.io/tags/%E5%89%8D%E7%AB%AF/"},{"name":"Flink","slug":"Flink","permalink":"https://andy-whb-cn.github.io/tags/Flink/"}]}